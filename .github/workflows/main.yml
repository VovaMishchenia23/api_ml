on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
     -  name: Checkout code
        uses: actions/checkout@v2
       
     -  name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
         
     -  name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/air-alerts-ml:latest
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install ssh client
        run: |
          sudo apt-get update
          sudo apt-get install -y ssh
          
      - name: Copy SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          
      - name: Deploy Docker image to EC2 instance
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.EC2_INSTANCE_HOST }} <<EOF
          sudo docker stop air-alerts-ml || true
          sudo docker rm air-alerts-ml || true
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/air-alerts-ml:latest
          sudo docker run -d --name air-alerts-ml -e PORT=${{ secrets.PORT }} -e DATABASE_URL=${{ secrets.DATABASE_URL }} -e API_TOKEN=${{ secrets.API_TOKEN }} -e WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }} -e WEATHER_URL=${{ secrets.WEATHER_URL }} -e ISW_URL=${{ secrets.ISW_URL }} -p ${{ secrets.PORT }}:${{ secrets.PORT }} ${{ secrets.DOCKERHUB_USERNAME }}/air-alerts-ml:latest
          EOF
